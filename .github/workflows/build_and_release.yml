name: Build and Release

permissions:
  contents: write

on:
  push:
    branches:
      - '**'  # Run on all branches
    tags:
      - 'v*.*.*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Extract version
        id: extract_version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            VERSION=$(git rev-parse --short HEAD)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Update version_string
        run: |
          sed -i 's/^version_string\s*=\s*".*"/version_string = "${{ env.VERSION }}"/' screenbasher.py

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build the .exe
        run: pyinstaller --onefile screenbasher.py

      - name: Rename .exe with version
        run: mv dist/screenbasher.exe dist/screenbasher_${{ env.VERSION }}.exe

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: screenbasher
          path: dist/screenbasher_${{ env.VERSION }}.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: screenbasher
          path: downloads

      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          files: downloads/screenbasher_${{ github.ref_name }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
